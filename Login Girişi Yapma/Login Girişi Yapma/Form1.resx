<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>